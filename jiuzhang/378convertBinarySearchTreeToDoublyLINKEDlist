/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 * Definition of Doubly-ListNode
 * class DoublyListNode {
 * public:
 *     int val;
 *     DoublyListNode *next, *prev;
 *     DoublyListNode(int val) {
 *         this->val = val;
           this->prev = this->next = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root: The root of tree
     * @return: the head of doubly list node
     */
     
    DoublyListNode* tail = NULL;
    DoublyListNode* head = NULL;
    DoublyListNode* bstToDoublyList(TreeNode* root) {
        // Write your code here

        helper(root);
        
        return head;
    }

    
    DoublyListNode* link(TreeNode* cur){
        if(!tail){
            head = new DoublyListNode(cur->val);
            head->prev = NULL;
            tail = head;
            return tail;
        }
        else{
            DoublyListNode* newNode = new DoublyListNode(cur-> val);
            tail->next = newNode;
            newNode->prev = tail;
            return newNode;
        }
    }
    
    void helper(TreeNode* cur){
        if(!cur){
            return;
        }
        
        helper(cur->left);
        tail = link(cur);
        helper(cur->right);
    }
*/
};



